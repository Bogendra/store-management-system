version: '3.8'

services:
  # Database service
  postgres:
    image: postgres:14-alpine
    container_name: store-db
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_MULTIPLE_DATABASES: "authdb,inventorydb"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh
    networks:
      - store-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Authentication service
  auth-service:
    build: 
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/authdb
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER:-postgres}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - JWT_SECRET=${JWT_SECRET:-8dGkjm2937fHjdSK8dGhwE5tYbN9jKl0PqRs2X3vZ4aC5bD6fG7hJ8kL9mN0pQ1r}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-3600000}
      - SERVER_PORT=8081
    ports:
      - "${AUTH_SERVICE_PORT:-8081}:8081"
    networks:
      - store-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Inventory service
  inventory-service:
    build:
      context: ./services/inventory-service
      dockerfile: Dockerfile
    container_name: inventory-service
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/inventorydb
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER:-postgres}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - JWT_SECRET=${JWT_SECRET:-8dGkjm2937fHjdSK8dGhwE5tYbN9jKl0PqRs2X3vZ4aC5bD6fG7hJ8kL9mN0pQ1r}
      - SERVER_PORT=8082
    ports:
      - "${INVENTORY_SERVICE_PORT:-8082}:8082"
    networks:
      - store-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Frontend application
  frontend:
    build:
      context: ./frontend-new
      dockerfile: Dockerfile
    container_name: store-frontend
    depends_on:
      auth-service:
        condition: service_healthy
      inventory-service:
        condition: service_healthy
    environment:
      - API_BASE_URL=http://localhost
      - AUTH_SERVICE_PORT=8081
      - INVENTORY_SERVICE_PORT=8082
    ports:
      - "${FRONTEND_PORT:-80}:80"
    networks:
      - store-network

networks:
  store-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
