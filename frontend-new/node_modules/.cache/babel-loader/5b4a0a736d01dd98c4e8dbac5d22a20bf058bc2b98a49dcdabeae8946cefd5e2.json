{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bbk04\\\\Desktop\\\\Bogendra\\\\Projects\\\\store-management-system\\\\frontend-new\\\\src\\\\pages\\\\RoleManagementPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Typography, Box, Paper, Button, TextField, Grid, Dialog, DialogTitle, DialogContent, DialogActions, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Chip, CircularProgress, Alert, Checkbox, FormControlLabel } from '@mui/material';\nimport { Add as AddIcon, Security as SecurityIcon } from '@mui/icons-material';\nimport { useForm } from 'react-hook-form';\nimport { useAuth } from '../context/AuthContext';\nimport axios from 'axios';\n\n// API base URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8081';\nconst RoleManagementPage = () => {\n  _s();\n  var _errors$name, _errors$description;\n  const {\n    token\n  } = useAuth();\n  const navigate = useNavigate();\n  const [roles, setRoles] = useState([]);\n  const [privileges, setPrivileges] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [createDialogOpen, setCreateDialogOpen] = useState(false);\n  const [createError, setCreateError] = useState(null);\n  const [selectedPrivileges, setSelectedPrivileges] = useState([]);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  // Mock data for development\n  const mockRoles = [{\n    id: 1,\n    name: 'SUPER_ADMIN',\n    description: 'Has full access to all system features',\n    privileges: [{\n      id: 1,\n      name: 'USER_CREATE',\n      description: 'Can create users'\n    }, {\n      id: 2,\n      name: 'USER_VIEW_ALL',\n      description: 'Can view all users'\n    }, {\n      id: 3,\n      name: 'ROLE_VIEW_ALL',\n      description: 'Can view all roles'\n    }]\n  }, {\n    id: 2,\n    name: 'STORE_MANAGER',\n    description: 'Can manage store operations and staff',\n    privileges: [{\n      id: 1,\n      name: 'USER_CREATE',\n      description: 'Can create users'\n    }, {\n      id: 2,\n      name: 'USER_VIEW_ALL',\n      description: 'Can view all users'\n    }]\n  }, {\n    id: 3,\n    name: 'STORE_STAFF',\n    description: 'Regular staff member with limited access',\n    privileges: []\n  }];\n  const mockPrivileges = [{\n    id: 1,\n    name: 'USER_CREATE',\n    description: 'Can create users'\n  }, {\n    id: 2,\n    name: 'USER_VIEW_ALL',\n    description: 'Can view all users'\n  }, {\n    id: 3,\n    name: 'ROLE_VIEW_ALL',\n    description: 'Can view all roles'\n  }, {\n    id: 4,\n    name: 'ROLE_CREATE',\n    description: 'Can create roles'\n  }, {\n    id: 5,\n    name: 'TENANT_VIEW_ALL',\n    description: 'Can view all tenants'\n  }, {\n    id: 6,\n    name: 'TENANT_CREATE',\n    description: 'Can create tenants'\n  }];\n\n  // Fetch roles and privileges\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Try to fetch roles from API\n        try {\n          const rolesResponse = await axios.get(`${API_BASE_URL}/api/admin/roles`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (Array.isArray(rolesResponse.data)) {\n            setRoles(rolesResponse.data);\n          } else {\n            console.warn('Roles API did not return an array, using mock data');\n            setRoles(mockRoles);\n          }\n        } catch (err) {\n          console.warn('Error fetching roles, using mock data');\n          setRoles(mockRoles);\n        }\n\n        // Try to fetch privileges from API\n        try {\n          const privilegesResponse = await axios.get(`${API_BASE_URL}/api/admin/privileges`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (Array.isArray(privilegesResponse.data)) {\n            setPrivileges(privilegesResponse.data);\n          } else {\n            console.warn('Privileges API did not return an array, using mock data');\n            setPrivileges(mockPrivileges);\n          }\n        } catch (err) {\n          console.warn('Error fetching privileges, using mock data');\n          setPrivileges(mockPrivileges);\n        }\n      } catch (err) {\n        var _err$response, _err$response$data, _err$response2, _err$response3;\n        console.error('Error fetching data:', err);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error loading data. Please try again later.');\n\n        // If unauthorized, redirect to login\n        if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401 || ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status) === 403) {\n          navigate('/login');\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [token, navigate]);\n  const togglePrivilege = privilegeId => {\n    setSelectedPrivileges(prevSelected => prevSelected.includes(privilegeId) ? prevSelected.filter(id => id !== privilegeId) : [...prevSelected, privilegeId]);\n  };\n  const handleCreateRole = async data => {\n    setCreateError(null);\n    try {\n      // Add selected privileges to the form data\n      const roleData = {\n        ...data,\n        privilegeIds: selectedPrivileges\n      };\n\n      // Make API call to create role\n      await axios.post(`${API_BASE_URL}/api/admin/roles`, roleData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Close dialog and refresh roles\n      setCreateDialogOpen(false);\n      reset();\n      setSelectedPrivileges([]);\n\n      // Try to refresh roles from API\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/admin/roles`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (Array.isArray(response.data)) {\n          setRoles(response.data);\n        }\n      } catch (err) {\n        // If API fails, update mock data (for development)\n        const newRole = {\n          id: mockRoles.length + 1,\n          name: data.name,\n          description: data.description,\n          privileges: mockPrivileges.filter(priv => selectedPrivileges.includes(priv.id))\n        };\n        setRoles([...mockRoles, newRole]);\n      }\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      console.error('Error creating role:', err);\n      setCreateError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Failed to create role. Please try again.');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h1\",\n          children: \"Role Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 24\n          }, this),\n          onClick: () => setCreateDialogOpen(true),\n          children: \"Create Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        sx: {\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Privileges\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: roles.length === 0 ? /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 4,\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  sx: {\n                    py: 2\n                  },\n                  children: \"No roles found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this) : roles.map(role => {\n              var _role$privileges, _role$privileges2;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: role.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: role.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [(_role$privileges = role.privileges) === null || _role$privileges === void 0 ? void 0 : _role$privileges.map(privilege => /*#__PURE__*/_jsxDEV(Chip, {\n                    label: privilege.name,\n                    size: \"small\",\n                    variant: \"outlined\",\n                    color: \"primary\",\n                    sx: {\n                      mr: 0.5,\n                      mb: 0.5\n                    }\n                  }, privilege.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 25\n                  }, this)), !((_role$privileges2 = role.privileges) !== null && _role$privileges2 !== void 0 && _role$privileges2.length) && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    children: \"No privileges assigned\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"outlined\",\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 21\n                }, this)]\n              }, role.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: createDialogOpen,\n      onClose: () => setCreateDialogOpen(false),\n      maxWidth: \"md\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(SecurityIcon, {\n            sx: {\n              mr: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), \"Create New Role\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [createError && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 2\n          },\n          children: createError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            fullWidth: true,\n            id: \"name\",\n            label: \"Role Name\",\n            autoFocus: true,\n            ...register('name', {\n              required: 'Role name is required',\n              pattern: {\n                value: /^[A-Z0-9_]+$/,\n                message: 'Role name must be uppercase with underscores only (e.g., STORE_MANAGER)'\n              }\n            }),\n            error: !!errors.name,\n            helperText: ((_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message) || 'Use uppercase letters with underscores (e.g., STORE_MANAGER)'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            fullWidth: true,\n            id: \"description\",\n            label: \"Description\",\n            multiline: true,\n            rows: 2,\n            ...register('description', {\n              required: 'Description is required'\n            }),\n            error: !!errors.description,\n            helperText: (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            sx: {\n              mt: 2,\n              mb: 1\n            },\n            children: \"Assign Privileges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: privileges.map(privilege => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selectedPrivileges.includes(privilege.id),\n                  onChange: () => togglePrivilege(privilege.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 23\n                }, this),\n                label: /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: privilege.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    color: \"text.secondary\",\n                    children: privilege.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 19\n              }, this)\n            }, privilege.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setCreateDialogOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit(handleCreateRole),\n          variant: \"contained\",\n          children: \"Create Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleManagementPage, \"UoKNBtAP0bp7jYHxnvQhqEUqCzg=\", false, function () {\n  return [useAuth, useNavigate, useForm];\n});\n_c = RoleManagementPage;\nexport default RoleManagementPage;\nvar _c;\n$RefreshReg$(_c, \"RoleManagementPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Container","Typography","Box","Paper","Button","TextField","Grid","Dialog","DialogTitle","DialogContent","DialogActions","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Chip","CircularProgress","Alert","Checkbox","FormControlLabel","Add","AddIcon","Security","SecurityIcon","useForm","useAuth","axios","jsxDEV","_jsxDEV","API_BASE_URL","RoleManagementPage","_s","_errors$name","_errors$description","token","navigate","roles","setRoles","privileges","setPrivileges","loading","setLoading","error","setError","createDialogOpen","setCreateDialogOpen","createError","setCreateError","selectedPrivileges","setSelectedPrivileges","register","handleSubmit","reset","formState","errors","mockRoles","id","name","description","mockPrivileges","fetchData","rolesResponse","get","headers","Authorization","Array","isArray","data","console","warn","err","privilegesResponse","_err$response","_err$response$data","_err$response2","_err$response3","response","message","status","togglePrivilege","privilegeId","prevSelected","includes","filter","handleCreateRole","roleData","privilegeIds","post","newRole","length","priv","_err$response4","_err$response4$data","sx","display","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","mt","mb","elevation","p","variant","component","startIcon","onClick","severity","colSpan","align","py","map","role","_role$privileges","_role$privileges2","privilege","label","size","color","mr","open","onClose","fullWidth","noValidate","margin","autoFocus","required","pattern","value","helperText","multiline","rows","container","spacing","item","xs","sm","control","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/bbk04/Desktop/Bogendra/Projects/store-management-system/frontend-new/src/pages/RoleManagementPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Typography,\n  Box,\n  Paper,\n  Button,\n  TextField,\n  Grid,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Chip,\n  CircularProgress,\n  Alert,\n  List,\n  ListItem,\n  ListItemText,\n  Checkbox,\n  FormControlLabel\n} from '@mui/material';\nimport { \n  Add as AddIcon,\n  Security as SecurityIcon\n} from '@mui/icons-material';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { useAuth } from '../context/AuthContext';\nimport axios from 'axios';\n\n// API base URL\nconst API_BASE_URL = 'http://localhost:8081';\n\ninterface Role {\n  id: number;\n  name: string;\n  description: string;\n  privileges: Privilege[];\n}\n\ninterface Privilege {\n  id: number;\n  name: string;\n  description: string;\n}\n\ninterface CreateRoleForm {\n  name: string;\n  description: string;\n  privilegeIds: number[];\n}\n\nconst RoleManagementPage: React.FC = () => {\n  const { token } = useAuth();\n  const navigate = useNavigate();\n  const [roles, setRoles] = useState<Role[]>([]);\n  const [privileges, setPrivileges] = useState<Privilege[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [createDialogOpen, setCreateDialogOpen] = useState(false);\n  const [createError, setCreateError] = useState<string | null>(null);\n  const [selectedPrivileges, setSelectedPrivileges] = useState<number[]>([]);\n\n  const { register, handleSubmit, reset, formState: { errors } } = useForm<CreateRoleForm>();\n\n  // Mock data for development\n  const mockRoles: Role[] = [\n    { \n      id: 1, \n      name: 'SUPER_ADMIN', \n      description: 'Has full access to all system features',\n      privileges: [\n        { id: 1, name: 'USER_CREATE', description: 'Can create users' },\n        { id: 2, name: 'USER_VIEW_ALL', description: 'Can view all users' },\n        { id: 3, name: 'ROLE_VIEW_ALL', description: 'Can view all roles' }\n      ]\n    },\n    { \n      id: 2, \n      name: 'STORE_MANAGER', \n      description: 'Can manage store operations and staff',\n      privileges: [\n        { id: 1, name: 'USER_CREATE', description: 'Can create users' },\n        { id: 2, name: 'USER_VIEW_ALL', description: 'Can view all users' }\n      ]\n    },\n    { \n      id: 3, \n      name: 'STORE_STAFF', \n      description: 'Regular staff member with limited access',\n      privileges: []\n    }\n  ];\n\n  const mockPrivileges: Privilege[] = [\n    { id: 1, name: 'USER_CREATE', description: 'Can create users' },\n    { id: 2, name: 'USER_VIEW_ALL', description: 'Can view all users' },\n    { id: 3, name: 'ROLE_VIEW_ALL', description: 'Can view all roles' },\n    { id: 4, name: 'ROLE_CREATE', description: 'Can create roles' },\n    { id: 5, name: 'TENANT_VIEW_ALL', description: 'Can view all tenants' },\n    { id: 6, name: 'TENANT_CREATE', description: 'Can create tenants' }\n  ];\n\n  // Fetch roles and privileges\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Try to fetch roles from API\n        try {\n          const rolesResponse = await axios.get(`${API_BASE_URL}/api/admin/roles`, {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n          if (Array.isArray(rolesResponse.data)) {\n            setRoles(rolesResponse.data);\n          } else {\n            console.warn('Roles API did not return an array, using mock data');\n            setRoles(mockRoles);\n          }\n        } catch (err) {\n          console.warn('Error fetching roles, using mock data');\n          setRoles(mockRoles);\n        }\n        \n        // Try to fetch privileges from API\n        try {\n          const privilegesResponse = await axios.get(`${API_BASE_URL}/api/admin/privileges`, {\n            headers: { Authorization: `Bearer ${token}` }\n          });\n          if (Array.isArray(privilegesResponse.data)) {\n            setPrivileges(privilegesResponse.data);\n          } else {\n            console.warn('Privileges API did not return an array, using mock data');\n            setPrivileges(mockPrivileges);\n          }\n        } catch (err) {\n          console.warn('Error fetching privileges, using mock data');\n          setPrivileges(mockPrivileges);\n        }\n      } catch (err: any) {\n        console.error('Error fetching data:', err);\n        setError(err.response?.data?.message || 'Error loading data. Please try again later.');\n        \n        // If unauthorized, redirect to login\n        if (err.response?.status === 401 || err.response?.status === 403) {\n          navigate('/login');\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, [token, navigate]);\n\n  const togglePrivilege = (privilegeId: number) => {\n    setSelectedPrivileges(prevSelected => \n      prevSelected.includes(privilegeId)\n        ? prevSelected.filter(id => id !== privilegeId)\n        : [...prevSelected, privilegeId]\n    );\n  };\n\n  const handleCreateRole: SubmitHandler<CreateRoleForm> = async (data) => {\n    setCreateError(null);\n    \n    try {\n      // Add selected privileges to the form data\n      const roleData = {\n        ...data,\n        privilegeIds: selectedPrivileges\n      };\n      \n      // Make API call to create role\n      await axios.post(`${API_BASE_URL}/api/admin/roles`, roleData, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      // Close dialog and refresh roles\n      setCreateDialogOpen(false);\n      reset();\n      setSelectedPrivileges([]);\n      \n      // Try to refresh roles from API\n      try {\n        const response = await axios.get(`${API_BASE_URL}/api/admin/roles`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        if (Array.isArray(response.data)) {\n          setRoles(response.data);\n        }\n      } catch (err) {\n        // If API fails, update mock data (for development)\n        const newRole: Role = {\n          id: mockRoles.length + 1,\n          name: data.name,\n          description: data.description,\n          privileges: mockPrivileges.filter(priv => selectedPrivileges.includes(priv.id))\n        };\n        setRoles([...mockRoles, newRole]);\n      }\n    } catch (err: any) {\n      console.error('Error creating role:', err);\n      setCreateError(err.response?.data?.message || 'Failed to create role. Please try again.');\n    }\n  };\n\n  if (loading) {\n    return (\n      <Container sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n        <CircularProgress />\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n          <Typography variant=\"h5\" component=\"h1\">\n            Role Management\n          </Typography>\n          <Button \n            variant=\"contained\" \n            startIcon={<AddIcon />}\n            onClick={() => setCreateDialogOpen(true)}\n          >\n            Create Role\n          </Button>\n        </Box>\n\n        {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\n\n        <TableContainer component={Paper} sx={{ mt: 3 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Description</TableCell>\n                <TableCell>Privileges</TableCell>\n                <TableCell>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {roles.length === 0 ? (\n                <TableRow>\n                  <TableCell colSpan={4} align=\"center\">\n                    <Typography variant=\"body1\" sx={{ py: 2 }}>\n                      No roles found\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ) : (\n                roles.map(role => (\n                  <TableRow key={role.id}>\n                    <TableCell>{role.name}</TableCell>\n                    <TableCell>{role.description}</TableCell>\n                    <TableCell>\n                      {role.privileges?.map(privilege => (\n                        <Chip \n                          key={privilege.id} \n                          label={privilege.name} \n                          size=\"small\" \n                          variant=\"outlined\"\n                          color=\"primary\"\n                          sx={{ mr: 0.5, mb: 0.5 }} \n                        />\n                      ))}\n                      {!role.privileges?.length && (\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          No privileges assigned\n                        </Typography>\n                      )}\n                    </TableCell>\n                    <TableCell>\n                      <Button size=\"small\" variant=\"outlined\">\n                        Edit\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n\n      {/* Create Role Dialog */}\n      <Dialog open={createDialogOpen} onClose={() => setCreateDialogOpen(false)} maxWidth=\"md\" fullWidth>\n        <DialogTitle>\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <SecurityIcon sx={{ mr: 1 }} />\n            Create New Role\n          </Box>\n        </DialogTitle>\n        <DialogContent>\n          {createError && <Alert severity=\"error\" sx={{ mb: 2 }}>{createError}</Alert>}\n          \n          <Box component=\"form\" noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              id=\"name\"\n              label=\"Role Name\"\n              autoFocus\n              {...register('name', { \n                required: 'Role name is required',\n                pattern: {\n                  value: /^[A-Z0-9_]+$/,\n                  message: 'Role name must be uppercase with underscores only (e.g., STORE_MANAGER)'\n                }\n              })}\n              error={!!errors.name}\n              helperText={errors.name?.message || 'Use uppercase letters with underscores (e.g., STORE_MANAGER)'}\n            />\n            \n            <TextField\n              margin=\"normal\"\n              fullWidth\n              id=\"description\"\n              label=\"Description\"\n              multiline\n              rows={2}\n              {...register('description', { required: 'Description is required' })}\n              error={!!errors.description}\n              helperText={errors.description?.message}\n            />\n            \n            <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 1 }}>\n              Assign Privileges\n            </Typography>\n            \n            <Grid container spacing={2}>\n              {privileges.map(privilege => (\n                <Grid item xs={12} sm={6} key={privilege.id}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox \n                        checked={selectedPrivileges.includes(privilege.id)}\n                        onChange={() => togglePrivilege(privilege.id)}\n                      />\n                    }\n                    label={\n                      <Box>\n                        <Typography variant=\"body2\">{privilege.name}</Typography>\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {privilege.description}\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setCreateDialogOpen(false)}>Cancel</Button>\n          <Button \n            onClick={handleSubmit(handleCreateRole)} \n            variant=\"contained\"\n          >\n            Create Role\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default RoleManagementPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}