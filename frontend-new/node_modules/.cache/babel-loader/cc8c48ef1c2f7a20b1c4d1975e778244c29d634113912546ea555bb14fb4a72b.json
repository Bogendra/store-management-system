{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bbk04\\\\Desktop\\\\Bogendra\\\\Projects\\\\store-management-system\\\\frontend-new\\\\src\\\\pages\\\\inventory\\\\BrandsAndCategoriesPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Paper, Box, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Grid, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, CircularProgress, FormControl, InputLabel, Select, MenuItem, Tabs, Tab } from '@mui/material';\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport AdminNavigation from '../../components/AdminNavigation';\nimport inventoryService from '../../services/inventoryService';\nimport { useSnackbar } from 'notistack';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c = TabPanel;\nconst BrandsAndCategoriesPage = () => {\n  _s();\n  const [tabValue, setTabValue] = useState(0);\n  const [brands, setBrands] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [parentCategories, setParentCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [brandDialogOpen, setBrandDialogOpen] = useState(false);\n  const [categoryDialogOpen, setCategoryDialogOpen] = useState(false);\n  const [currentBrand, setCurrentBrand] = useState(null);\n  const [currentCategory, setCurrentCategory] = useState(null);\n  const [brandsPage, setBrandsPage] = useState(0);\n  const [categoriesPage, setCategoriesPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  // Form fields\n  const [brandFields, setBrandFields] = useState({\n    name: '',\n    description: ''\n  });\n  const [categoryFields, setCategoryFields] = useState({\n    name: '',\n    description: '',\n    parentId: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const [brandsData, categoriesData, topLevelCategories] = await Promise.all([inventoryService.getBrands(), inventoryService.getCategories(), inventoryService.getTopLevelCategories()]);\n        setBrands(brandsData);\n        setCategories(categoriesData);\n        setParentCategories(categoriesData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        enqueueSnackbar('Failed to load brands and categories data', {\n          variant: 'error'\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [enqueueSnackbar]);\n  const handleTabChange = (_, newValue) => {\n    setTabValue(newValue);\n  };\n  const handleBrandsPageChange = (_, newPage) => {\n    setBrandsPage(newPage);\n  };\n  const handleCategoriesPageChange = (_, newPage) => {\n    setCategoriesPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    const newRowsPerPage = parseInt(event.target.value, 10);\n    setRowsPerPage(newRowsPerPage);\n    setBrandsPage(0);\n    setCategoriesPage(0);\n  };\n  const handleOpenBrandDialog = (brand = null) => {\n    if (brand) {\n      setBrandFields({\n        name: brand.name,\n        description: brand.description || ''\n      });\n      setCurrentBrand(brand);\n    } else {\n      setBrandFields({\n        name: '',\n        description: ''\n      });\n      setCurrentBrand(null);\n    }\n    setBrandDialogOpen(true);\n  };\n  const handleCloseBrandDialog = () => {\n    setBrandDialogOpen(false);\n    setCurrentBrand(null);\n  };\n  const handleOpenCategoryDialog = (category = null) => {\n    if (category) {\n      setCategoryFields({\n        name: category.name,\n        description: category.description || '',\n        parentId: category.parentId ? category.parentId.toString() : ''\n      });\n      setCurrentCategory(category);\n    } else {\n      setCategoryFields({\n        name: '',\n        description: '',\n        parentId: ''\n      });\n      setCurrentCategory(null);\n    }\n    setCategoryDialogOpen(true);\n  };\n  const handleCloseCategoryDialog = () => {\n    setCategoryDialogOpen(false);\n    setCurrentCategory(null);\n  };\n  const handleBrandInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setBrandFields({\n      ...brandFields,\n      [name]: value\n    });\n  };\n  const handleCategoryInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCategoryFields({\n      ...categoryFields,\n      [name]: value\n    });\n  };\n  const handleSaveBrand = async () => {\n    try {\n      const brandData = {\n        ...brandFields\n      };\n      let savedBrand;\n      if (currentBrand) {\n        savedBrand = await inventoryService.updateBrand(currentBrand.id, brandData);\n        enqueueSnackbar('Brand updated successfully', {\n          variant: 'success'\n        });\n      } else {\n        savedBrand = await inventoryService.createBrand(brandData);\n        enqueueSnackbar('Brand created successfully', {\n          variant: 'success'\n        });\n      }\n\n      // Update brands list\n      if (currentBrand) {\n        setBrands(brands.map(brand => brand.id === currentBrand.id ? savedBrand : brand));\n      } else {\n        setBrands([...brands, savedBrand]);\n      }\n      handleCloseBrandDialog();\n    } catch (error) {\n      console.error('Error saving brand:', error);\n      enqueueSnackbar('Failed to save brand', {\n        variant: 'error'\n      });\n    }\n  };\n  const handleSaveCategory = async () => {\n    try {\n      const categoryData = {\n        ...categoryFields,\n        parentId: categoryFields.parentId ? parseInt(categoryFields.parentId) : undefined\n      };\n      let savedCategory;\n      if (currentCategory) {\n        savedCategory = await inventoryService.updateCategory(currentCategory.id, categoryData);\n        enqueueSnackbar('Category updated successfully', {\n          variant: 'success'\n        });\n      } else {\n        savedCategory = await inventoryService.createCategory(categoryData);\n        enqueueSnackbar('Category created successfully', {\n          variant: 'success'\n        });\n      }\n\n      // Fetch updated categories to reflect parent-child relationships correctly\n      const updatedCategories = await inventoryService.getCategories();\n      setCategories(updatedCategories);\n      setParentCategories(updatedCategories);\n      handleCloseCategoryDialog();\n    } catch (error) {\n      console.error('Error saving category:', error);\n      enqueueSnackbar('Failed to save category', {\n        variant: 'error'\n      });\n    }\n  };\n  const handleDeleteBrand = async id => {\n    if (window.confirm('Are you sure you want to delete this brand?')) {\n      try {\n        await inventoryService.deleteBrand(id);\n        setBrands(brands.filter(brand => brand.id !== id));\n        enqueueSnackbar('Brand deleted successfully', {\n          variant: 'success'\n        });\n      } catch (error) {\n        console.error('Error deleting brand:', error);\n        enqueueSnackbar('Failed to delete brand', {\n          variant: 'error'\n        });\n      }\n    }\n  };\n  const handleDeleteCategory = async id => {\n    if (window.confirm('Are you sure you want to delete this category?')) {\n      try {\n        await inventoryService.deleteCategory(id);\n        setCategories(categories.filter(category => category.id !== id));\n        enqueueSnackbar('Category deleted successfully', {\n          variant: 'success'\n        });\n      } catch (error) {\n        console.error('Error deleting category:', error);\n        enqueueSnackbar('Failed to delete category', {\n          variant: 'error'\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(AdminNavigation, {\n      title: \"Brands & Categories\",\n      breadcrumbs: [{\n        label: 'Dashboard',\n        path: '/dashboard'\n      }, {\n        label: 'Brands & Categories',\n        path: '/admin/inventory/brands'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        value: tabValue,\n        onChange: handleTabChange,\n        \"aria-label\": \"brands and categories tabs\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Brands\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 0,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Brands\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 26\n            }, this),\n            onClick: () => handleOpenBrandDialog(),\n            children: \"Add Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              sx: {\n                minWidth: 650\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: brands.slice(brandsPage * rowsPerPage, brandsPage * rowsPerPage + rowsPerPage).map(brand => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: brand.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: brand.description || '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                      color: \"primary\",\n                      onClick: () => handleOpenBrandDialog(brand),\n                      children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 342,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                      color: \"error\",\n                      onClick: () => handleDeleteBrand(brand.id),\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 345,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 27\n                  }, this)]\n                }, brand.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n            component: \"div\",\n            count: brands.length,\n            page: brandsPage,\n            onPageChange: handleBrandsPageChange,\n            rowsPerPage: rowsPerPage,\n            onRowsPerPageChange: handleChangeRowsPerPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: tabValue,\n        index: 1,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 26\n            }, this),\n            onClick: () => handleOpenCategoryDialog(),\n            children: \"Add Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            p: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              sx: {\n                minWidth: 650\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Parent Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: categories.slice(categoriesPage * rowsPerPage, categoriesPage * rowsPerPage + rowsPerPage).map(category => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: category.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: category.parentName || '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: category.description || '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                      color: \"primary\",\n                      onClick: () => handleOpenCategoryDialog(category),\n                      children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 403,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 402,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                      color: \"error\",\n                      onClick: () => handleDeleteCategory(category.id),\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 406,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 27\n                  }, this)]\n                }, category.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n            component: \"div\",\n            count: categories.length,\n            page: categoriesPage,\n            onPageChange: handleCategoriesPageChange,\n            rowsPerPage: rowsPerPage,\n            onRowsPerPageChange: handleChangeRowsPerPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: brandDialogOpen,\n      onClose: handleCloseBrandDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: currentBrand ? 'Edit Brand' : 'Add New Brand'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"name\",\n              label: \"Brand Name\",\n              value: brandFields.name,\n              onChange: handleBrandInputChange,\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"description\",\n              label: \"Description\",\n              value: brandFields.description,\n              onChange: handleBrandInputChange,\n              fullWidth: true,\n              multiline: true,\n              rows: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseBrandDialog,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveBrand,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: categoryDialogOpen,\n      onClose: handleCloseCategoryDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: currentCategory ? 'Edit Category' : 'Add New Category'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"name\",\n              label: \"Category Name\",\n              value: categoryFields.name,\n              onChange: handleCategoryInputChange,\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"parent-category-label\",\n                children: \"Parent Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"parent-category-label\",\n                name: \"parentId\",\n                value: categoryFields.parentId,\n                onChange: handleCategoryInputChange,\n                label: \"Parent Category\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"None (Top Level)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 19\n                }, this), parentCategories.filter(cat => !currentCategory || cat.id !== currentCategory.id).map(category => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: category.id.toString(),\n                  children: category.name\n                }, category.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"description\",\n              label: \"Description\",\n              value: categoryFields.description,\n              onChange: handleCategoryInputChange,\n              fullWidth: true,\n              multiline: true,\n              rows: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseCategoryDialog,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveCategory,\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n};\n_s(BrandsAndCategoriesPage, \"ieDFJr/+T5zoLvTRpidbFvG11Qo=\", false, function () {\n  return [useSnackbar];\n});\n_c2 = BrandsAndCategoriesPage;\nexport default BrandsAndCategoriesPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"BrandsAndCategoriesPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Paper","Box","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Grid","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TablePagination","CircularProgress","FormControl","InputLabel","Select","MenuItem","Tabs","Tab","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","AdminNavigation","inventoryService","useSnackbar","jsxDEV","_jsxDEV","Fragment","_Fragment","TabPanel","props","children","value","index","other","role","hidden","id","sx","p","fileName","_jsxFileName","lineNumber","columnNumber","_c","BrandsAndCategoriesPage","_s","tabValue","setTabValue","brands","setBrands","categories","setCategories","parentCategories","setParentCategories","loading","setLoading","brandDialogOpen","setBrandDialogOpen","categoryDialogOpen","setCategoryDialogOpen","currentBrand","setCurrentBrand","currentCategory","setCurrentCategory","brandsPage","setBrandsPage","categoriesPage","setCategoriesPage","rowsPerPage","setRowsPerPage","enqueueSnackbar","brandFields","setBrandFields","name","description","categoryFields","setCategoryFields","parentId","fetchData","brandsData","categoriesData","topLevelCategories","Promise","all","getBrands","getCategories","getTopLevelCategories","error","console","variant","handleTabChange","_","newValue","handleBrandsPageChange","newPage","handleCategoriesPageChange","handleChangeRowsPerPage","event","newRowsPerPage","parseInt","target","handleOpenBrandDialog","brand","handleCloseBrandDialog","handleOpenCategoryDialog","category","toString","handleCloseCategoryDialog","handleBrandInputChange","e","handleCategoryInputChange","handleSaveBrand","brandData","savedBrand","updateBrand","createBrand","map","handleSaveCategory","categoryData","undefined","savedCategory","updateCategory","createCategory","updatedCategories","handleDeleteBrand","window","confirm","deleteBrand","filter","handleDeleteCategory","deleteCategory","maxWidth","mt","mb","title","breadcrumbs","label","path","onChange","display","justifyContent","alignItems","startIcon","onClick","minWidth","slice","color","component","count","length","page","onPageChange","onRowsPerPageChange","parentName","open","onClose","container","spacing","item","xs","fullWidth","required","multiline","rows","labelId","cat","_c2","$RefreshReg$"],"sources":["C:/Users/bbk04/Desktop/Bogendra/Projects/store-management-system/frontend-new/src/pages/inventory/BrandsAndCategoriesPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Typography,\n  Paper,\n  Box,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Grid,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Tabs,\n  Tab,\n  Divider\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon\n} from '@mui/icons-material';\nimport AdminNavigation from '../../components/AdminNavigation';\nimport inventoryService from '../../services/inventoryService';\nimport { useSnackbar } from 'notistack';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n    </div>\n  );\n}\n\ninterface Brand {\n  id: number;\n  name: string;\n  description?: string;\n}\n\ninterface Category {\n  id: number;\n  name: string;\n  description?: string;\n  parentId?: number;\n  parentName?: string;\n  children?: Category[];\n}\n\nconst BrandsAndCategoriesPage: React.FC = () => {\n  const [tabValue, setTabValue] = useState(0);\n  const [brands, setBrands] = useState<Brand[]>([]);\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [parentCategories, setParentCategories] = useState<Category[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [brandDialogOpen, setBrandDialogOpen] = useState(false);\n  const [categoryDialogOpen, setCategoryDialogOpen] = useState(false);\n  const [currentBrand, setCurrentBrand] = useState<Brand | null>(null);\n  const [currentCategory, setCurrentCategory] = useState<Category | null>(null);\n  const [brandsPage, setBrandsPage] = useState(0);\n  const [categoriesPage, setCategoriesPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Form fields\n  const [brandFields, setBrandFields] = useState({\n    name: '',\n    description: ''\n  });\n\n  const [categoryFields, setCategoryFields] = useState({\n    name: '',\n    description: '',\n    parentId: ''\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const [brandsData, categoriesData, topLevelCategories] = await Promise.all([\n          inventoryService.getBrands(),\n          inventoryService.getCategories(),\n          inventoryService.getTopLevelCategories()\n        ]);\n        \n        setBrands(brandsData);\n        setCategories(categoriesData);\n        setParentCategories(categoriesData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        enqueueSnackbar('Failed to load brands and categories data', { variant: 'error' });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [enqueueSnackbar]);\n\n  const handleTabChange = (_: React.SyntheticEvent, newValue: number) => {\n    setTabValue(newValue);\n  };\n\n  const handleBrandsPageChange = (_: unknown, newPage: number) => {\n    setBrandsPage(newPage);\n  };\n\n  const handleCategoriesPageChange = (_: unknown, newPage: number) => {\n    setCategoriesPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newRowsPerPage = parseInt(event.target.value, 10);\n    setRowsPerPage(newRowsPerPage);\n    setBrandsPage(0);\n    setCategoriesPage(0);\n  };\n\n  const handleOpenBrandDialog = (brand: Brand | null = null) => {\n    if (brand) {\n      setBrandFields({\n        name: brand.name,\n        description: brand.description || ''\n      });\n      setCurrentBrand(brand);\n    } else {\n      setBrandFields({\n        name: '',\n        description: ''\n      });\n      setCurrentBrand(null);\n    }\n    setBrandDialogOpen(true);\n  };\n\n  const handleCloseBrandDialog = () => {\n    setBrandDialogOpen(false);\n    setCurrentBrand(null);\n  };\n\n  const handleOpenCategoryDialog = (category: Category | null = null) => {\n    if (category) {\n      setCategoryFields({\n        name: category.name,\n        description: category.description || '',\n        parentId: category.parentId ? category.parentId.toString() : ''\n      });\n      setCurrentCategory(category);\n    } else {\n      setCategoryFields({\n        name: '',\n        description: '',\n        parentId: ''\n      });\n      setCurrentCategory(null);\n    }\n    setCategoryDialogOpen(true);\n  };\n\n  const handleCloseCategoryDialog = () => {\n    setCategoryDialogOpen(false);\n    setCurrentCategory(null);\n  };\n\n  const handleBrandInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setBrandFields({\n      ...brandFields,\n      [name]: value\n    });\n  };\n\n  const handleCategoryInputChange = (e: React.ChangeEvent<HTMLInputElement | { name?: string; value: unknown }>) => {\n    const { name, value } = e.target;\n    setCategoryFields({\n      ...categoryFields,\n      [name as string]: value\n    });\n  };\n\n  const handleSaveBrand = async () => {\n    try {\n      const brandData = { ...brandFields };\n\n      let savedBrand;\n      if (currentBrand) {\n        savedBrand = await inventoryService.updateBrand(currentBrand.id, brandData);\n        enqueueSnackbar('Brand updated successfully', { variant: 'success' });\n      } else {\n        savedBrand = await inventoryService.createBrand(brandData);\n        enqueueSnackbar('Brand created successfully', { variant: 'success' });\n      }\n\n      // Update brands list\n      if (currentBrand) {\n        setBrands(brands.map(brand => (brand.id === currentBrand.id ? savedBrand : brand)));\n      } else {\n        setBrands([...brands, savedBrand]);\n      }\n\n      handleCloseBrandDialog();\n    } catch (error) {\n      console.error('Error saving brand:', error);\n      enqueueSnackbar('Failed to save brand', { variant: 'error' });\n    }\n  };\n\n  const handleSaveCategory = async () => {\n    try {\n      const categoryData = {\n        ...categoryFields,\n        parentId: categoryFields.parentId ? parseInt(categoryFields.parentId) : undefined\n      };\n\n      let savedCategory;\n      if (currentCategory) {\n        savedCategory = await inventoryService.updateCategory(currentCategory.id, categoryData);\n        enqueueSnackbar('Category updated successfully', { variant: 'success' });\n      } else {\n        savedCategory = await inventoryService.createCategory(categoryData);\n        enqueueSnackbar('Category created successfully', { variant: 'success' });\n      }\n\n      // Fetch updated categories to reflect parent-child relationships correctly\n      const updatedCategories = await inventoryService.getCategories();\n      setCategories(updatedCategories);\n      setParentCategories(updatedCategories);\n\n      handleCloseCategoryDialog();\n    } catch (error) {\n      console.error('Error saving category:', error);\n      enqueueSnackbar('Failed to save category', { variant: 'error' });\n    }\n  };\n\n  const handleDeleteBrand = async (id: number) => {\n    if (window.confirm('Are you sure you want to delete this brand?')) {\n      try {\n        await inventoryService.deleteBrand(id);\n        setBrands(brands.filter(brand => brand.id !== id));\n        enqueueSnackbar('Brand deleted successfully', { variant: 'success' });\n      } catch (error) {\n        console.error('Error deleting brand:', error);\n        enqueueSnackbar('Failed to delete brand', { variant: 'error' });\n      }\n    }\n  };\n\n  const handleDeleteCategory = async (id: number) => {\n    if (window.confirm('Are you sure you want to delete this category?')) {\n      try {\n        await inventoryService.deleteCategory(id);\n        setCategories(categories.filter(category => category.id !== id));\n        enqueueSnackbar('Category deleted successfully', { variant: 'success' });\n      } catch (error) {\n        console.error('Error deleting category:', error);\n        enqueueSnackbar('Failed to delete category', { variant: 'error' });\n      }\n    }\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <AdminNavigation\n        title=\"Brands & Categories\"\n        breadcrumbs={[\n          { label: 'Dashboard', path: '/dashboard' },\n          { label: 'Brands & Categories', path: '/admin/inventory/brands' }\n        ]}\n      />\n\n      <Paper sx={{ p: 2 }}>\n        <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"brands and categories tabs\">\n          <Tab label=\"Brands\" />\n          <Tab label=\"Categories\" />\n        </Tabs>\n\n        <TabPanel value={tabValue} index={0}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n            <Typography variant=\"h6\">Brands</Typography>\n            <Button\n              variant=\"contained\"\n              startIcon={<AddIcon />}\n              onClick={() => handleOpenBrandDialog()}\n            >\n              Add Brand\n            </Button>\n          </Box>\n\n          {loading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\n              <CircularProgress />\n            </Box>\n          ) : (\n            <>\n              <TableContainer>\n                <Table sx={{ minWidth: 650 }}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Name</TableCell>\n                      <TableCell>Description</TableCell>\n                      <TableCell>Actions</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {brands\n                      .slice(brandsPage * rowsPerPage, brandsPage * rowsPerPage + rowsPerPage)\n                      .map((brand) => (\n                        <TableRow key={brand.id}>\n                          <TableCell>{brand.name}</TableCell>\n                          <TableCell>{brand.description || '-'}</TableCell>\n                          <TableCell>\n                            <IconButton color=\"primary\" onClick={() => handleOpenBrandDialog(brand)}>\n                              <EditIcon />\n                            </IconButton>\n                            <IconButton color=\"error\" onClick={() => handleDeleteBrand(brand.id)}>\n                              <DeleteIcon />\n                            </IconButton>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              <TablePagination\n                component=\"div\"\n                count={brands.length}\n                page={brandsPage}\n                onPageChange={handleBrandsPageChange}\n                rowsPerPage={rowsPerPage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n              />\n            </>\n          )}\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={1}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n            <Typography variant=\"h6\">Categories</Typography>\n            <Button\n              variant=\"contained\"\n              startIcon={<AddIcon />}\n              onClick={() => handleOpenCategoryDialog()}\n            >\n              Add Category\n            </Button>\n          </Box>\n\n          {loading ? (\n            <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\n              <CircularProgress />\n            </Box>\n          ) : (\n            <>\n              <TableContainer>\n                <Table sx={{ minWidth: 650 }}>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Name</TableCell>\n                      <TableCell>Parent Category</TableCell>\n                      <TableCell>Description</TableCell>\n                      <TableCell>Actions</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {categories\n                      .slice(categoriesPage * rowsPerPage, categoriesPage * rowsPerPage + rowsPerPage)\n                      .map((category) => (\n                        <TableRow key={category.id}>\n                          <TableCell>{category.name}</TableCell>\n                          <TableCell>{category.parentName || '-'}</TableCell>\n                          <TableCell>{category.description || '-'}</TableCell>\n                          <TableCell>\n                            <IconButton color=\"primary\" onClick={() => handleOpenCategoryDialog(category)}>\n                              <EditIcon />\n                            </IconButton>\n                            <IconButton color=\"error\" onClick={() => handleDeleteCategory(category.id)}>\n                              <DeleteIcon />\n                            </IconButton>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              <TablePagination\n                component=\"div\"\n                count={categories.length}\n                page={categoriesPage}\n                onPageChange={handleCategoriesPageChange}\n                rowsPerPage={rowsPerPage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n              />\n            </>\n          )}\n        </TabPanel>\n      </Paper>\n\n      {/* Brand Dialog */}\n      <Dialog open={brandDialogOpen} onClose={handleCloseBrandDialog}>\n        <DialogTitle>{currentBrand ? 'Edit Brand' : 'Add New Brand'}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12}>\n              <TextField\n                name=\"name\"\n                label=\"Brand Name\"\n                value={brandFields.name}\n                onChange={handleBrandInputChange}\n                fullWidth\n                required\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                name=\"description\"\n                label=\"Description\"\n                value={brandFields.description}\n                onChange={handleBrandInputChange}\n                fullWidth\n                multiline\n                rows={3}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseBrandDialog}>Cancel</Button>\n          <Button onClick={handleSaveBrand} variant=\"contained\" color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Category Dialog */}\n      <Dialog open={categoryDialogOpen} onClose={handleCloseCategoryDialog}>\n        <DialogTitle>{currentCategory ? 'Edit Category' : 'Add New Category'}</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12}>\n              <TextField\n                name=\"name\"\n                label=\"Category Name\"\n                value={categoryFields.name}\n                onChange={handleCategoryInputChange}\n                fullWidth\n                required\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl fullWidth>\n                <InputLabel id=\"parent-category-label\">Parent Category</InputLabel>\n                <Select\n                  labelId=\"parent-category-label\"\n                  name=\"parentId\"\n                  value={categoryFields.parentId}\n                  onChange={handleCategoryInputChange}\n                  label=\"Parent Category\"\n                >\n                  <MenuItem value=\"\">\n                    <em>None (Top Level)</em>\n                  </MenuItem>\n                  {parentCategories\n                    .filter(cat => !currentCategory || cat.id !== currentCategory.id)\n                    .map((category) => (\n                      <MenuItem key={category.id} value={category.id.toString()}>\n                        {category.name}\n                      </MenuItem>\n                    ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                name=\"description\"\n                label=\"Description\"\n                value={categoryFields.description}\n                onChange={handleCategoryInputChange}\n                fullWidth\n                multiline\n                rows={3}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseCategoryDialog}>Cancel</Button>\n          <Button onClick={handleSaveCategory} variant=\"contained\" color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default BrandsAndCategoriesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}