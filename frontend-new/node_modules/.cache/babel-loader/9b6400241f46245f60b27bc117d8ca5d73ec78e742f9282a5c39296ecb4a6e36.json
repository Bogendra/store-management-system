{"ast":null,"code":"import axios from 'axios';\n\n// API base URL\nconst API_BASE_URL = 'http://localhost:8081';\n\n// Define interfaces for auth requests/responses\n\n// Auth API client\nconst authApi = {\n  // Login endpoint\n  login: async credentials => {\n    const response = await axios.post(`${API_BASE_URL}/api/auth/login`, credentials);\n    return response.data;\n  },\n  // Registration endpoint\n  register: async userData => {\n    const response = await axios.post(`${API_BASE_URL}/api/auth/register`, userData);\n    return response.data;\n  },\n  // Get current user info\n  getCurrentUser: async token => {\n    const response = await axios.get(`${API_BASE_URL}/api/users/me`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  }\n};\nexport default authApi;","map":{"version":3,"names":["axios","API_BASE_URL","authApi","login","credentials","response","post","data","register","userData","getCurrentUser","token","get","headers","Authorization"],"sources":["C:/Users/bbk04/Desktop/Bogendra/Projects/store-management-system/frontend-new/src/api/auth.ts"],"sourcesContent":["import axios from 'axios';\n\n// API base URL\nconst API_BASE_URL = 'http://localhost:8081';\n\n// Define interfaces for auth requests/responses\nexport interface AuthRequest {\n  username: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  token: string;\n}\n\nexport interface RegisterRequest {\n  username: string;\n  password: string;\n  email: string;\n  tenantId: number;\n}\n\nexport interface RegisterResponse {\n  id: number;\n  username: string;\n  email: string;\n}\n\nexport interface UserInfo {\n  id: number;\n  username: string;\n  email: string;\n  tenantId: number;\n  tenantName: string;\n  roleNames: string[];\n  enabled: boolean;\n}\n\n// Auth API client\nconst authApi = {\n  // Login endpoint\n  login: async (credentials: AuthRequest): Promise<AuthResponse> => {\n    const response = await axios.post<AuthResponse>(\n      `${API_BASE_URL}/api/auth/login`,\n      credentials\n    );\n    return response.data;\n  },\n\n  // Registration endpoint\n  register: async (userData: RegisterRequest): Promise<RegisterResponse> => {\n    const response = await axios.post<RegisterResponse>(\n      `${API_BASE_URL}/api/auth/register`,\n      userData\n    );\n    return response.data;\n  },\n\n  // Get current user info\n  getCurrentUser: async (token: string): Promise<UserInfo> => {\n    const response = await axios.get<UserInfo>(\n      `${API_BASE_URL}/api/users/me`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }\n    );\n    return response.data;\n  }\n};\n\nexport default authApi;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAG,uBAAuB;;AAE5C;;AAiCA;AACA,MAAMC,OAAO,GAAG;EACd;EACAC,KAAK,EAAE,MAAOC,WAAwB,IAA4B;IAChE,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAC/B,GAAGL,YAAY,iBAAiB,EAChCG,WACF,CAAC;IACD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAC,QAAQ,EAAE,MAAOC,QAAyB,IAAgC;IACxE,MAAMJ,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAC/B,GAAGL,YAAY,oBAAoB,EACnCQ,QACF,CAAC;IACD,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAG,cAAc,EAAE,MAAOC,KAAa,IAAwB;IAC1D,MAAMN,QAAQ,GAAG,MAAML,KAAK,CAACY,GAAG,CAC9B,GAAGX,YAAY,eAAe,EAC9B;MACEY,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUH,KAAK;MAChC;IACF,CACF,CAAC;IACD,OAAON,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeL,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}